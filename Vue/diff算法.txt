初次渲染的时候，将VDOM渲染成真正的DOM插入到容器里
后续渲染的时候，将新旧VDOM对比，把他们之间所不同部分构建到真正的DOM树上

虚拟DOM本质上是一个对象，该对象描述了一个UI节点所对应的一些必要信息

真实DOM 
<div class="title">你好</div>

对应的虚拟DOM 
const VDOM = {
    type: "div",
    content: "你好",
    props:{
        class:["title"]
    },
}
为什么使用虚拟DOM?
真实DOM在创建的时候会携带非常多的属性，diff算法需要参照物去比对，用真实的DOM去比对，会产生很大的消耗
通过事务处理机制，将多次DOM修改的结果一次性的更新到页面上
从而有效的减少页面渲染的次数，减少修改DOM的重绘重排次数，提高渲染性能